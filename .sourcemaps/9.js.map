{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACa;AACN;AAEZ;AAcpC,IAAa,eAAe;IAA5B;IAA+B,CAAC;IAAD,sBAAC;AAAD,CAAC;AAAnB,eAAe;IAZ3B,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,yDAAS;SACV;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;YACnC,4EAAe,CAAC,QAAQ,EAAE;SAC3B;QACD,OAAO,EAAE;YACP,yDAAS;SACV;KACF,CAAC;GACW,eAAe,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;AClBa;AAIC;AACa;AACQ;AAEd;AAEoB;AACjC;AAMpC,IAAa,SAAS;IAapB,mBAAmB,OAAgB,EAAS,IAAsB,EAAS,OAAsB,EACxF,IAAU,EACV,SAA0B,EAC1B,gBAAkC;QAH3C,iBAQC;QARkB,YAAO,GAAP,OAAO,CAAS;QAAS,SAAI,GAAJ,IAAI,CAAkB;QAAS,YAAO,GAAP,OAAO,CAAe;QACxF,SAAI,GAAJ,IAAI,CAAM;QACV,cAAS,GAAT,SAAS,CAAiB;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAL3C,OAAE,GAAiB,EAAE,CAAC;QA4BtB,QAAG,GAAW,EAAE,CAAC;QACjB,SAAI,GAAW,EAAE,CAAC;QAtBhB,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;YACvD,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC;IACJ,CAAC;IAoBD,2BAAO,GAAP;QAAA,iBAuBC;QAtBC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAC9C,UAAC,EAAE;YACD,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;gBACb,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBAChC,OAAO,EAAE,0CAA0C;oBACnD,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,KAAK;iBAChB,CAAC,CAAC;gBACH,KAAK,CAAC,OAAO,EAAE,CAAC;YAClB,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,KAAI,CAAC,GAAG,CAAC,CAAC;gBAClC;;qBAEK;gBACL,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,wDAAQ,CAAC,CAAC;YAE9B,CAAC;QACH,CAAC,EAED,UAAC,GAAG,IAAK,YAAK,CAAC,SAAS,CAAC,EAAhB,CAAgB,CAC1B,CAAC;IACJ,CAAC;IACH,gBAAC;AAAD,CAAC;AAjEY,SAAS;IAJrB,wEAAS,CAAC;QACT,QAAQ,EAAE,YAAY;OACG;KAC1B,CAAC;2EAciG;QAClF,sEAAI;QACC,6EAAe;QACR,MAAgB;AAiD5C;SAjEY,SAAS,e","file":"9.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    LoginPage\n  ]\n})\nexport class LoginPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Storage } from '@ionic/storage';\n\nimport { loginclass } from './loginclass';\nimport { user_class } from './user_class';\nimport { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController, ToastController } from 'ionic-angular';\n\nimport { User } from '../../providers/providers';\nimport { Demo1Page } from '../../pages/demo1/demo1';\nimport { LoginproProvider } from '../../providers/loginpro/loginpro';\nimport { MainPage } from \"../pages\";\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html'\n})\nexport class LoginPage {\n  // The account fields for the login form.\n  // If you're using the username field with or without email, make\n  // sure to add it to the type\n  /*account: { email: string, password: string } = {\n    email: 'test@example.com',\n    password: 'test'\n  };*/\n\n  // Our translated text strings\n  private loginErrorString: string;\n  u1: user_class[] = [];\n  loginsession: loginclass;\n  constructor(public storage: Storage, public data: LoginproProvider, public navCtrl: NavController,\n    public user: User,\n    public toastCtrl: ToastController,\n    public translateService: TranslateService) {\n\n    this.translateService.get('LOGIN_ERROR').subscribe((value) => {\n      this.loginErrorString = value;\n    })\n  }\n\n  // Attempt to login in through our User service\n  /*dologin() {\n    this.data.doLogin(this.eid,this.pass).subscribe((resp) => {\n      this.navCtrl.push(MainPage);\n    }, (err) => {\n      this.navCtrl.push(MainPage);\n      // Unable to log in\n      let toast = this.toastCtrl.create({\n        message: this.loginErrorString,\n        duration: 3000,\n        position: 'top'\n      });\n      toast.present();\n    });\n  }*/\n  dt: user_class;\n  eid: string = \"\";\n  pass: string = \"\";\n  onClick() {\n    this.data.doLogin(this.eid, this.pass).subscribe(\n      (dt) => {\n        if (dt == \"\") {\n          let toast = this.toastCtrl.create({\n            message: \"Invalid UserName Or Password , Try Again\",\n            duration: 4000,\n            position: 'top'\n          });\n          toast.present();\n        }\n        else {\n          this.storage.set('uid', this.eid);\n          /*this.storage.get('uid').then((val) => {\n            console.log(val);\n          });*/\n          this.navCtrl.push(MainPage);\n\n        }\n      },\n\n      (err) => alert(\"invalid\"),\n    );\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}