{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts","../../src/shared/email_class.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    LoginPage\n  ]\n})\nexport class LoginPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Storage } from '@ionic/storage';\nimport { AlertController } from 'ionic-angular';\nimport { loginclass } from './loginclass';\nimport { user_class } from './user_class';\nimport { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController, ToastController } from 'ionic-angular';\n\nimport { User } from '../../providers/providers';\nimport { Demo1Page } from '../../pages/demo1/demo1';\nimport { LoginproProvider } from '../../providers/loginpro/loginpro';\nimport { MainPage } from \"../pages\";\nimport { LoadingController } from 'ionic-angular/components/loading/loading-controller';\nimport { email_class } from '../../shared/email_class';\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html'\n})\nexport class LoginPage {\n  // The account fields for the login form.\n  // If you're using the username field with or without email, make\n  // sure to add it to the type\n  /*account: { email: string, password: string } = {\n    email: 'test@example.com',\n    password: 'test'\n  };*/\n\n  // Our translated text strings\n  private loginErrorString: string;\n  u1: user_class[] = [];\n  loginsession: loginclass;\n  constructor(public load: LoadingController, public alert: AlertController, public storage: Storage, public data: LoginproProvider, public navCtrl: NavController,\n    public user: User,\n    public toastCtrl: ToastController,\n    public translateService: TranslateService) {\n\n    this.translateService.get('LOGIN_ERROR').subscribe((value) => {\n      this.loginErrorString = value;\n    })\n  }\n\n  // Attempt to login in through our User service\n  /*dologin() {\n    this.data.doLogin(this.eid,this.pass).subscribe((resp) => {\n      this.navCtrl.push(MainPage);\n    }, (err) => {\n      this.navCtrl.push(MainPage);\n      // Unable to log in\n      let toast = this.toastCtrl.create({\n        message: this.loginErrorString,\n        duration: 3000,\n        position: 'top'\n      });\n      toast.present();\n    });\n  }*/\n  dt: user_class;\n  eid: string = \"jaishilbhavsar@yahoo.in\";\n  pass: string = \"jaishil\";\n  onClick() {\n    this.data.doLogin(this.eid, this.pass).subscribe(\n      (dt) => {\n        if (dt == \"\") {\n          let toast = this.toastCtrl.create({\n            message: \"Invalid UserName Or Password , Try Again\",\n            duration: 4000,\n            position: 'top'\n          });\n          toast.present();\n        }\n        else {\n          this.storage.set('uid', this.eid);\n          /*this.storage.get('uid').then((val) => {\n            console.log(val);\n          });*/\n          this.navCtrl.push(MainPage);\n\n        }\n      },\n\n      (err) => alert(\"invalid\"),\n    );\n  }\n  forid: string = '';\n  u: user_class[] = [];\n  validate() {\n    let l1 = this.load.create({\n      content: \"Loading ...\"\n    });\n    l1.present();\n    this.data.getUser(this.forid)\n      .subscribe(\n      (dt:any) => {\n        if(dt!=\"\")\n        {\n        this.u = dt;\n        this.eid = this.u[0].user_id;\n        var message = \"Hello \" + this.forid + \". You have requested to reset the password. your password is '\" + this.u[0].user_pass + \"'. Password is one of the confidential thing, Don't share it with anyone.\";\n        this.data.sendMail(new email_class(message, this.forid, \"Resetting the password of Lets_Meet.\"))\n          .subscribe(\n          (data1: any) => {\n            console.log(\"mail sent\");\n            alert(\"The Password has been sent to \" + this.forid);\n          },\n          function (e) {\n            alert(e);\n          },\n          function () {\n            l1.dismiss();\n          }\n          );\n      }\n      else{\n        alert(\"enter valid mail\");\n      }\n    }\n      ,\n      function (e) {\n        alert(e);\n      },\n      function () {\n        l1.dismiss();\n      }\n      );\n  }\n  showPrompt() {\n    let prompt = this.alert.create({\n      title: 'Forgot Password',\n      message: \"Enter Your Email Id To Get Your Password\",\n      inputs: [\n        {\n          name: 'name',\n          placeholder: 'Email_id'\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          handler: data => {\n            console.log('Cancel clicked');\n          }\n        },\n        {\n          text: 'Send',\n          handler: data => {\n            this.forid = data.name;\n            this.validate();\n          }\n        }\n      ]\n    });\n    prompt.present();\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","export class email_class\r\n{\r\n    constructor(public message:string,public name:string,public subject:string)\r\n    {\r\n        \r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/email_class.ts"],"sourceRoot":""}